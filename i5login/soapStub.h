/* soapStub.h
   Generated by gSOAP 2.8.13 from weblogin.h

Copyright(C) 2000-2012, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
1) GPL or 2) Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapStub_H
#define soapStub_H
#include <vector>
#define SOAP_NAMESPACE_OF_ns2	"http://weblogin.wsbeans.iseries/xsd"
#include "stdsoap2.h"
#if GSOAP_VERSION != 20813
# error "GSOAP VERSION MISMATCH IN GENERATED CODE: PLEASE REINSTALL PACKAGE"
#endif


/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE_ns2__WEBLOGINInput
#define SOAP_TYPE_ns2__WEBLOGINInput (8)
/* ns2:WEBLOGINInput */
class SOAP_CMAC ns2__WEBLOGINInput
{
public:
	std::string *_USCOREERRORCODE;	/* optional element of type xsd:string */
	std::string *_USCOREMESSAGE;	/* optional element of type xsd:string */
	std::string *_USCOREPASSWORD;	/* optional element of type xsd:string */
	std::string *_USCOREUSERID;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 8; } /* = unique id SOAP_TYPE_ns2__WEBLOGINInput */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__WEBLOGINInput() { ns2__WEBLOGINInput::soap_default(NULL); }
	virtual ~ns2__WEBLOGINInput() { }
};
#endif

#ifndef SOAP_TYPE_ns2__WEBLOGINResult
#define SOAP_TYPE_ns2__WEBLOGINResult (9)
/* ns2:WEBLOGINResult */
class SOAP_CMAC ns2__WEBLOGINResult
{
public:
	std::string *_USCOREERRORCODE;	/* optional element of type xsd:string */
	std::string *_USCOREMESSAGE;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 9; } /* = unique id SOAP_TYPE_ns2__WEBLOGINResult */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__WEBLOGINResult() { ns2__WEBLOGINResult::soap_default(NULL); }
	virtual ~ns2__WEBLOGINResult() { }
};
#endif

#ifndef SOAP_TYPE__ns2__weblogin
#define SOAP_TYPE__ns2__weblogin (10)
/* ns2:weblogin */
class SOAP_CMAC _ns2__weblogin
{
public:
	ns2__WEBLOGINInput *param0;	/* optional element of type ns2:WEBLOGINInput */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 10; } /* = unique id SOAP_TYPE__ns2__weblogin */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns2__weblogin() { _ns2__weblogin::soap_default(NULL); }
	virtual ~_ns2__weblogin() { }
};
#endif

#ifndef SOAP_TYPE__ns2__webloginResponse
#define SOAP_TYPE__ns2__webloginResponse (11)
/* ns2:webloginResponse */
class SOAP_CMAC _ns2__webloginResponse
{
public:
	ns2__WEBLOGINResult *return_;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns2:WEBLOGINResult */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 11; } /* = unique id SOAP_TYPE__ns2__webloginResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns2__webloginResponse() { _ns2__webloginResponse::soap_default(NULL); }
	virtual ~_ns2__webloginResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns2__weblogin_USCOREXML
#define SOAP_TYPE__ns2__weblogin_USCOREXML (12)
/* ns2:weblogin_XML */
class SOAP_CMAC _ns2__weblogin_USCOREXML
{
public:
	ns2__WEBLOGINInput *param0;	/* optional element of type ns2:WEBLOGINInput */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 12; } /* = unique id SOAP_TYPE__ns2__weblogin_USCOREXML */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns2__weblogin_USCOREXML() { _ns2__weblogin_USCOREXML::soap_default(NULL); }
	virtual ~_ns2__weblogin_USCOREXML() { }
};
#endif

#ifndef SOAP_TYPE__ns2__weblogin_USCOREXMLResponse
#define SOAP_TYPE__ns2__weblogin_USCOREXMLResponse (13)
/* ns2:weblogin_XMLResponse */
class SOAP_CMAC _ns2__weblogin_USCOREXMLResponse
{
public:
	std::string *return_;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 13; } /* = unique id SOAP_TYPE__ns2__weblogin_USCOREXMLResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns2__weblogin_USCOREXMLResponse() { _ns2__weblogin_USCOREXMLResponse::soap_default(NULL); }
	virtual ~_ns2__weblogin_USCOREXMLResponse() { }
};
#endif

#ifndef SOAP_TYPE___ns1__weblogin_USCOREXML
#define SOAP_TYPE___ns1__weblogin_USCOREXML (22)
/* Operation wrapper: */
struct __ns1__weblogin_USCOREXML
{
public:
	_ns2__weblogin_USCOREXML *ns2__weblogin_USCOREXML;	/* optional element of type ns2:weblogin_XML */
public:
	int soap_type() const { return 22; } /* = unique id SOAP_TYPE___ns1__weblogin_USCOREXML */
};
#endif

#ifndef SOAP_TYPE___ns1__weblogin
#define SOAP_TYPE___ns1__weblogin (26)
/* Operation wrapper: */
struct __ns1__weblogin
{
public:
	_ns2__weblogin *ns2__weblogin;	/* optional element of type ns2:weblogin */
public:
	int soap_type() const { return 26; } /* = unique id SOAP_TYPE___ns1__weblogin */
};
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (27)
/* SOAP Header: */
struct SOAP_ENV__Header
{
public:
	int soap_type() const { return 27; } /* = unique id SOAP_TYPE_SOAP_ENV__Header */
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (28)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
public:
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
public:
	int soap_type() const { return 28; } /* = unique id SOAP_TYPE_SOAP_ENV__Code */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (30)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
public:
	char *__any;
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
public:
	int soap_type() const { return 30; } /* = unique id SOAP_TYPE_SOAP_ENV__Detail */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (33)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
public:
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 33; } /* = unique id SOAP_TYPE_SOAP_ENV__Reason */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (34)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
public:
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
public:
	int soap_type() const { return 34; } /* = unique id SOAP_TYPE_SOAP_ENV__Fault */
};
#endif

#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


#endif

/* End of soapStub.h */
